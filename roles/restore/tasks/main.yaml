---

- name: Init backup variables
  ansible.builtin.set_fact:
    temp_location: "/tmp"
    temp_folder_name: "gitea-restore"

- name: Init backup variables
  ansible.builtin.set_fact:
    temp_folder_path: "{{temp_location}}/{{temp_folder_name}}"
    temp_archive_path: "{{temp_location}}/backup.zip"

- name: Create temporary folder
  ansible.builtin.file:
    path: "{{ temp_folder_path }}"
    state: directory
    mode: '0644'

- name: Backup archive to s3
  ansible.legacy.include_role: 
    name: frantchenco.gitea.restore_s3
  when: gitea_backup_methode == 's3'

- name: Archive backup
  ansible.builtin.unarchive:
    dest: "{{ temp_folder_path }}"
    src: "{{ temp_archive_path }}"
    remote_src: yes

- name: Restore gitea local
  ansible.legacy.include_role: 
    name: frantchenco.gitea.restore_local
  when: gitea_installation == 'local'

- name: Restore gitea docker
  ansible.legacy.include_role: 
    name: frantchenco.gitea.restore_docker
  when: gitea_installation == 'docker'

- name: Restore gitea kubernetes
  ansible.legacy.include_role: 
    name: frantchenco.gitea.restore_kubernetes
  when: gitea_installation == 'kubernetes'

- name: Remove temporary folder
  ansible.builtin.file:
    path: "{{ temp_folder_path }}"
    state: absent
  
- name: Remove temporary archive
  ansible.builtin.file:
    path: "{{ temp_archive_path }}"
    state: absent