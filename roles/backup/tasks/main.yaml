---

- name: Init backup variables
  ansible.builtin.set_fact:
    temp_location: "/tmp"
    temp_folder_name: "gitea-{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}"
    temp_archive_name: "{{gitea_backup_prefix}}-{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}.zip"

- name: Init backup variables
  ansible.builtin.set_fact:
    temp_folder_path: "{{temp_location}}/{{temp_folder_name}}"
    temp_archive_path: "{{temp_location}}/{{temp_archive_name}}"

- name: Create temporary folder
  ansible.builtin.file:
    path: "{{ temp_folder_path }}"
    state: directory
    mode: '0644'

- name: Backup gitea local
  ansible.legacy.include_role: 
    name: frantchenco.gitea.backup_local
  when: gitea_installation == 'local'

- name: Backup gitea docker
  ansible.legacy.include_role: 
    name: frantchenco.gitea.backup_docker
  when: gitea_installation == 'docker'

- name: Backup gitea kubernetes
  ansible.legacy.include_role: 
    name: frantchenco.gitea.backup_kubernetes
  when: gitea_installation == 'kubernetes'

- name: Archive backup
  ansible.builtin.archive:
    path: "{{ temp_folder_path }}/*"
    dest: "{{ temp_archive_path }}"
    format: zip

- name: Backup archive to s3
  ansible.legacy.include_role: 
    name: frantchenco.gitea.backup_s3
  when: gitea_backup_methode == 's3'

- name: Remove temporary folder
  ansible.builtin.file:
    path: "{{ temp_folder_path }}"
    state: absent

- name: Remove temporary archives
  ansible.builtin.file:
    path: "{{ temp_archive_path }}"
    state: absent